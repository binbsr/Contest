@model Kolpi.Models.Survey.SurveyResultViewModel

@{
    ViewData["Title"] = "Survey Result";
    var feedbacks = Model.FeedbackViewModels;
}

<div>
  <ul class="nav nav-tabs" role="tablist">
    <li role="presentation" class="active"><a href="#surveySummary" aria-controls="surveySummary" role="tab" data-toggle="tab">Survey Summary</a></li>
    <li role="presentation"><a href="#allFeedbacks" aria-controls="allFeedbacks" role="tab" data-toggle="tab" class="active">Feedbacks From All Individuals</a></li>
  </ul>
  <div class="tab-content">

    <div role="tabpanel" class="tab-pane fade in active" id="surveySummary">
      <br />
      <div class="row">
        <div class="col-md-4">
          <div class="panel panel-info">
            <div class="panel-heading">
              <h3 class="panel-title">Average rating</h3>
            </div>
            <div class="panel-body">
              <h1>
                @Model.AverageRating <small>out of 10</small>
              </h1>
            </div>
          </div>
        </div>
        <div class="col-md-4">
          <div class="panel panel-info">
            <div class="panel-heading">
              <h3 class="panel-title">Interested in future</h3>
            </div>
            <div class="panel-body">
              <h1>@Model.InterestedInFutureTotal <small>out of @Model.TotalResponses</small></h1>
            </div>
          </div>
        </div>
      </div>
      <div class="row">
        <div class="col-md-4">
          <div class="panel panel-success">
            <div class="panel-heading">
              <h3 class="panel-title">GOOD things about event</h3>
            </div>
            <div class="panel-body">
              @for (int i = 0; i < Model.Goods.Count; i++)
              {
                  <strong>@(i + 1). </strong><strong class="text-success">@Model.Goods[i]</strong><br />
              }
            </div>
          </div>
        </div>
        <div class="col-md-4">
          <div class="panel panel-warning">
            <div class="panel-heading">
              <h3 class="panel-title">OK things about event</h3>
            </div>
            <div class="panel-body">
              @for (int i = 0; i < Model.Oks.Count; i++)
              {
                  <strong>@(i + 1). </strong><strong class="text-warning">@Model.Oks[i]</strong><br />
              }
            </div>
          </div>
        </div>

        <div class="col-md-4">
          <div class="panel panel-danger">
            <div class="panel-heading">
              <h3 class="panel-title">BAD things about event</h3>
            </div>
            <div class="panel-body">
              @for (int i = 0; i < Model.Bads.Count; i++)
              {
                  <strong>@(i + 1). </strong><strong class="text-danger">@Model.Bads[i]</strong><br />
              }
            </div>
          </div>
        </div>
      </div>
      <div class="row">
        <div class="col-md-4">
          <div class="panel panel-info">
            <div class="panel-heading">
              <h3 class="panel-title">Future theme ideas</h3>
            </div>
            <div class="panel-body">
              @for (int i = 0; i < Model.FutureThemeList.Count; i++)
              {
                  <strong>@(i + 1). </strong><strong>@Model.FutureThemeList[i]</strong><br />
              }
            </div>
          </div>
        </div>
        <div class="col-md-4">
          <div class="panel panel-info">
            <div class="panel-heading">
              <h3 class="panel-title">Expected features other than given ones</h3>
            </div>
            <div class="panel-body">
              @for (int i = 0; i < Model.ExpectedFeatureList.Count; i++)
              {
                  <strong>@(i + 1). </strong><strong>@Model.ExpectedFeatureList[i]</strong><br />
              }
            </div>
          </div>
        </div>
        <div class="col-md-4">
          <div class="panel panel-info">
            <div class="panel-heading">
              <h3 class="panel-title">Judging process improvement ideas</h3>
            </div>
            <div class="panel-body">
              @for (int i = 0; i < Model.JudigProcessImprovementList.Count; i++)
              {
                  <strong>@(i + 1). </strong><strong>@Model.JudigProcessImprovementList[i]</strong><br />
              }
            </div>
          </div>
        </div>
      </div>
      <div class="row">
        <div class="col-md-12">
          <div class="panel panel-info">
            <div class="panel-heading">
              <h3 class="panel-title">Given features selection stats</h3>
            </div>
            <div class="panel-body">
              @foreach (var feature in Model.FixedFeaturesSelections)
              {
                  <div class="col-md-6">
                    <div class="well">
                      <h3>@feature.SelectionCount <small>out of @Model.TotalResponses think following feature need to be addressed.</small></h3>
                      <blockquote>@feature.FeatureName</blockquote>
                    </div>
                  </div>
              }
            </div>
          </div>
        </div>
      </div>
    </div>

    <div role="tabpanel" class="tab-pane fade" id="allFeedbacks">
      <br />
      @for (var i = 0; i < feedbacks.Count; i++)
      {
        var feedback = feedbacks[i];
          <div class="row">
            <div class="col-md-1">
              <strong>@(string.IsNullOrWhiteSpace(feedback.Name) ? "User"+(i+1) : feedback.Name)</strong>
            </div>
            <div class="alert alert-info col-md-11" role="alert">
              <div class="col-md-7">
                <strong class="text-success">Good about event: </strong>@feedback.Good<br />
                <strong class="text-warning">Ok about event: </strong>@feedback.Ok<br />
                <strong class="text-danger">Bad about event: </strong>@feedback.Bad
              </div>
              <div class="col-md-5">
                <strong>Rating: </strong>@feedback.OverallRating / 10 <br />
                <strong>Interested in future: </strong>@(feedback.InterestedInFuture ? "Yes" : "No")<br />
                <strong>Future theme titles: </strong>@feedback.FutureTheme<br />
                <strong>Expected features: </strong>@feedback.ExpectedFeatures<br />
                <strong>Judging process improvements: </strong>@feedback.JudgingProcessImprovements
              </div>
              <label>Feature(s) need to be addressed:</label>
              @for (var j = 0; j < feedback.EventFeatureViewModels.Count; j++)
              {
                var feature = feedback.EventFeatureViewModels[j];
                @feature.Name
                if (j != feedback.EventFeatureViewModels.Count - 1)
                {
                      <strong>|</strong>
                }
              }
            </div>
          </div>
      }
    </div>
  </div>
</div>