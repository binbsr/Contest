@using Microsoft.AspNetCore.Identity

@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager

@if (SignInManager.IsSignedIn(User))
{
  <form asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })" method="post" id="logoutForm" class="form-inline ml-auto">
    <ul class="navbar-nav ml-auto">
      <li class="nav-item dropdown">
        <a class="nav-link dropdown-toggle" data-toggle="dropdown" href="#" role="button" aria-haspopup="true" aria-expanded="false">@UserManager.GetUserName(User)</a>
        <div class="dropdown-menu w-100">
          @*<a class="dropdown-item" asp-area="Identity" asp-page="/Account/Manage/Index"><ion-icon name="person"></ion-icon> Manage</a>*@
          <button type="submit" class="btn btn-outline-success dropdown-item"><ion-icon name="log-out" class="align-middle"></ion-icon> <span class="align-middle">Logout</span></button>
        </div>
      </li>
    </ul>
  </form>
}
else
{
  <ul class="navbar-nav ml-auto">
    @*<li class="nav-item">
      <a class="nav-link" asp-area="Identity" asp-page="/Account/Register">Register</a>
    </li>*@
    <li class="nav-item">
      <a class="btn btn-outline-success" asp-area="Identity" asp-page="/Account/Login">Login</a>
    </li>
  </ul>
}